"""
Script to convert networks from PyPSA-Eur-Sec v0.17.1 to data format used in the
IAMC database
"""

import pypsa
import openpyxl
import pandas as pd

#original IAMCE file, official template
path = "IAMC_format.xlsx"
#use the official template

model = "PyPSA-Eur-Sec 0.17.1"
scenarios =['1.5C carbon budget','2.0C carbon budget']

years = [2020, 2030, 2050] 


for scenario in scenarios:
    #one excel file per scenario
    file = openpyxl.load_workbook(path)
    ds = file['installed_capacity'] #data sheet
    ds1= file['Yearly_generation_supply']
    for year in years:
        if scenario == '1.5C carbon budget':
            n=pypsa.Network('elec_s370_37m_lv1.0__3H-T-H-B-I-solar+p3-dist1-cb25.7ex0_{}.nc'.format(year))
        elif scenario == '2.0C carbon budget':
            n=pypsa.Network('elec_s370_37m_lv1.0__3H-T-H-B-I-solar+p3-dist1-cb73.9ex0_{}.nc'.format(year))
        
        costs = pd.read_csv("costs.csv", index_col=[0,1])
        countries=list(set(n.buses['country']))
        countries.remove('')

        if year==2020:
            year_sub=2015     #Data from 2020 is used for the 2015 column
        else: year_sub=year     
        col=[c for c in ds[1] if c.value=='Y_'+str(year_sub)][0].column
        col1=[c for c in ds1[1] if c.value=='Y_'+str(year_sub)][0].column
        
        for i,country in enumerate(countries):
            if year == 2020:
                #one datasheet per country including information from different years
                target = file.copy_worksheet(file['installed_capacity'])
                target1 = file.copy_worksheet(file['Yearly_generation_supply'])
                target.title ='installed_capacity ' + str(country)
                target1.title ='Yearly_generation_supply ' + str(country)
            ds = file['installed_capacity ' + str(country)]   ##str(i) in original code, replace later
            ds1 = file['Yearly_generation_supply ' + str(country)]   ##str(i) in original code, replace later
            
            var={}
            var1={}
        

            ###Electric capcaties (MW -> GW)
    
            #Capacity : Solar PV (rooftop, ground)   
            
            var['Installed capacity|Electricity|Solar|Rooftop PV'] = 0.001*n.generators.p_nom_opt.filter(like ='solar rooftop').filter(like =country).sum()
            var['Installed capacity|Heat|Solar'] = 0.001*n.generators.p_nom_opt.filter(like ='solar thermal').filter(like =country).sum()
            var['Installed capacity|Electricity|Solar|Open field'] = 0.001*n.generators.p_nom_opt.filter(like ='solar').filter(like =country).sum()\
            -var['Installed capacity|Heat|Solar']-var['Installed capacity|Electricity|Solar|Rooftop PV']
            var['Installed capacity|Electricity|Solar'] =var['Installed capacity|Electricity|Solar|Open field']+var['Installed capacity|Electricity|Solar|Rooftop PV']
            
            #Capacity :  onshore and offshore wind   
            
            var['Installed capacity|Electricity|Wind|Onshore']=0.001*n.generators.p_nom_opt.filter(like ='onwind').filter(like =country).sum() 
            var['Installed capacity|Electricity|Wind|Offshore']=0.001*n.generators.p_nom_opt.filter(like ='offwind').filter(like =country).sum() 
            var['Installed capacity|Electricity|Wind']=var['Installed capacity|Electricity|Wind|Onshore']+var['Installed capacity|Electricity|Wind|Offshore']
            
            #Capacity : Nuclear
            
            var['Installed capacity|Electricity|Nuclear'] =0.001*(n.links.efficiency.filter(like ='nuclear').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='nuclear').filter(like =country)).sum()
          

            #Capacity :  Coal (Lignite)        
                                                           
            var['Installed capacity|Electricity|Coal|Brown Coal|Lignite'] = 0.001*(n.links.efficiency.filter(like ='lignite').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='lignite').filter(like =country)).sum()
            var['Installed capacity|Electricity|Coal|Brown Coal'] =var['Installed capacity|Electricity|Coal|Brown Coal|Lignite'] 
            
            var['Installed capacity|Electricity|Coal'] = 0.001*(n.links.efficiency.filter(like ='coal').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='coal').filter(like =country)).sum() + var['Installed capacity|Electricity|Coal|Brown Coal']                                                    

            #Capacity : Natural gas(OCGT, CCGT, CHP, CHP CC)       
                                                                 
            var['Installed capacity|Electricity|Gases|Fossil|Natural gas'] = 0.001*(n.links.efficiency.filter(like ='gas CHP').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='gas CHP').filter(like =country)).sum()
            var['Installed capacity|Electricity|Gases|Fossil|Natural gas'] += 0.001* (n.links.efficiency.filter(like ='OCGT').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='OCGT').filter(like =country)).sum()
            var['Installed capacity|Electricity|Gases|Fossil|Natural gas'] += 0.001* (n.links.efficiency.filter(like ='CCGT').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='CCGT').filter(like =country)).sum()
            
            var['Installed capacity|Electricity|Gases|Fossil|Natural gas|CCS'] = 0.001*(n.links.efficiency.filter(like ='gas CHP CC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='gas CHP CC').filter(like =country)).sum()
            
            #Capacity :Biomass (CCS)
                                                                 
            var['Installed capacity|Electricity|Solid bio and waste|Primary solid biomass'] = 0.001*(n.links.efficiency.filter(like ='solid biomass CHP').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='solid biomass CHP').filter(like =country)).sum() 
            var['Installed capacity|Electricity|Solid bio and waste'] = var['Installed capacity|Electricity|Solid bio and waste|Primary solid biomass']
            var['Installed capacity|Electricty|Biomass'] = var['Installed capacity|Electricity|Solid bio and waste']
            
            var['Installed capacity|Electricity|Solid bio and waste|Primary solid biomass|CCS'] = 0.001*(n.links.efficiency.filter(like ='solid biomass CHP CC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='solid biomass CHP CC').filter(like =country)).sum()            
            var['Installed capacity|Electricity|Solid bio and waste|CCS'] = var['Installed capacity|Electricity|Solid bio and waste|Primary solid biomass|CCS']
            var['Installed capacity|Electricty|Biomass|CCS'] = var['Installed capacity|Electricity|Solid bio and waste|CCS']            
           
            #Capacity : Hydrogen
            
            var['Installed capacity|Electricity|Gases|Hydrogen'] = 0.001*(n.links.efficiency.filter(like ='H2 Fuel Cell').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='H2 Fuel Cell').filter(like =country)).sum()

            #Capacity : Oil 

            var['Installed capacity|Electricity|Liquids|Fossil'] = 0.001*(n.links.efficiency.filter(like ='oil-').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='oil-').filter(like =country)).sum()

            #Capacity : Power to gas 
            """
            var['Installed capacity|P2G|Electricity'] = 0.001* (n.links.efficiency.filter(like ='Sabatier').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='Sabatier').filter(like =country)).sum()*var['Installed capacity|Electricity|Gases|Fossil|Natural gas']/\
                 (var['Installed capacity|Heat|Gases|Fossil|Natural gas']+var['Installed capacity|Electricity|Gases|Fossil|Natural gas']                
            """ 
            #Capacity : hydro (reservoir, ror)

            var['Installed capacity|Electricity|Hydro|river'] = 0.001*n.generators.p_nom_opt.filter(like ='ror').filter(like =country).sum()
            var['Installed capacity|Electricity|Hydro|dam'] = 0.001*n.storage_units.p_nom_opt.filter(like ='hydro').filter(like =country).sum()
            var['Installed capacity|Electricity|Hydro'] = var['Installed capacity|Electricity|Hydro|river']+var['Installed capacity|Electricity|Hydro|dam']
           
            #Capacity : storage (PHS, battery, H2 storage)
            
            #MWh to GWh
            var['Installed capacity|Flexibility|Electricity Storage|Medium duration'] = 0.001 *(n.storage_units.p_nom_opt.filter(like ='PHS').filter(like =country)).sum()+\
             (n.storage_units.p_nom_opt.filter(like ='hydro').filter(like =country)).sum()+\
             (n.stores.e_nom_opt.filter(like ='water tanks').filter(like =country)).sum()+\
             (n.stores.e_nom_opt.filter(like ='H2').filter(like =country)).sum()
            
            var['Installed capacity|Flexibility|Electricity Storage|Short duration'] = 0.001*(n.stores.e_nom_opt.filter(like ='battery').filter(like =country)+\
             n.stores.e_nom_opt.filter(like ='Li ion').filter(like =country)).sum()
            
            var['Installed capacity|Flexibility|Electricity Storage'] =  var['Installed capacity|Flexibility|Electricity Storage|Medium duration']+\
            var['Installed capacity|Flexibility|Electricity Storage|Short duration']
            
            #Capacity : Interconnect (?)

            
            var['Installed capacity|Flexibility|Interconnect Importing Capacity'] = 0.001*(n.lines.s_nom_opt[[i for i in n.lines.index if country in n.lines.bus0[i]or country in n.lines.bus1[i]]]).sum()+\
            (n.links.efficiency.filter(like ='H2 pipeline').filter(like =country)*n.links.p_nom_opt.filter(like ='H2 pipeline').filter(like =country)).sum()
                      
               
                
            ### Heat capcaties (MW -> GW)
            
            #Capacity :Biomass (CCS)

            var['Installed capacity|Heat|Biomass'] = 0.001*(n.links.efficiency2.filter(like ='solid biomass CHP').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='solid biomass CHP').filter(like =country)).sum()
            var['Installed capacity|Heat|Solid bio and waste'] = var['Installed capacity|Heat|Biomass']  
            var['Installed capacity|Heat|Solid bio and waste|Primary solid biomass'] = var['Installed capacity|Heat|Solid bio and waste']  
            
            var['Installed capacity|Heat|Biomass|CCS'] = 0.001*(n.links.efficiency2.filter(like ='solid biomass CHP CC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='solid biomass CHP CC').filter(like =country)).sum()
            var['Installed capacity|Heat|Solid bio and waste|CCS'] = var['Installed capacity|Heat|Biomass|CCS']  
            var['Installed capacity|Heat|Solid bio and waste|Primary solid biomass|CCS'] = var['Installed capacity|Heat|Solid bio and waste|CCS']  
          
            #Capacity :Electricity (Resistive heater, heat pump, DAC(?))
            
            var['Installed capacity|Heat|Electricity|Direct'] = 0.001*(n.links.efficiency.filter(like ='resistive heater').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='resistive heater').filter(like =country)).sum()
            var['Installed capacity|Heat|Electricity|Heat pump'] = 0.001*(n.links.efficiency.filter(like ='heat pump').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='heat pump').filter(like =country)).sum()
            var['Installed capacity|Heat|Electricity']=0.001*(n.links.efficiency3.filter(like ='DAC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='DAC').filter(like =country)).sum()+\
            var['Installed capacity|Heat|Electricity|Direct']+var['Installed capacity|Heat|Electricity|Heat pump']

            #Capacity :Natural gas

            var['Installed capacity|Heat|Gases|Fossil|Natural Gas'] = 0.001*(n.links.efficiency2.filter(like ='gas CHP').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='gas CHP').filter(like =country)).sum()            
            var['Installed capacity|Heat|Gases|Fossil|Natural Gas'] += 0.001* (n.links.efficiency.filter(like ='gas boiler').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='gas boiler').filter(like =country)).sum()
            
            var['Installed capacity|Heat|Gases|Fossil|Natural Gas|CCS'] = 0.001*(n.links.efficiency2.filter(like ='gas CHP CC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='gas CHP CC').filter(like =country)).sum()            
            
            #Capacity :Hydrogen
            
            var['Installed capacity|Heat|Gases|Hydrogen'] = 0.001* (n.links.efficiency2.filter(like ='H2 Fuel Cell').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='H2 Fuel Cell').filter(like =country)).sum()  
            var['Installed capacity|Heat|Gases|Hydrogen'] += 0.001* (n.links.efficiency3.filter(like ='Fischer-Tropsch').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='Fischer-Tropsch').filter(like =country)).sum()    
            
            #Capacity :Power to gas (?)
            """    
            var['Installed capacity|Heat|Gases|P2G'] = 0.001* (n.links.efficiency.filter(like ='Sabatier').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='Sabatier').filter(like =country)).sum()*var['Installed capacity|Heat|Gases|Fossil|Natural Gas']/\
                 (var['Installed capacity|Heat|Gases|Fossil|Natural gas']+var['Installed capacity|Electricity|Gases|Fossil|Natural gas']                
            """
            #Capacity : Oil
 
            var['Installed capacity|Heat|Liquids|Fossil'] = 0.001*(n.links.efficiency.filter(like ='oil boiler').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='oil boiler').filter(like =country)).sum() 
            
            #Capacity : solar thermal
    
            var['Installed capacity|Heat|Solar'] = 0.001*(n.generators.p_nom_opt.filter(like ='solar thermal').filter(like =country)).sum()
            
                                                
            # Hydrogen capcaties 

            var['Installed capacity|Hydrogen|Electricity'] = 0.001* (n.links.efficiency.filter(like ='H2 Electrolysis').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='H2 Electrolysis').filter(like =country)).sum()    
                  
            var['Installed capacity|Hydrogen|Gasses|Fossil|Natural gas|CCS'] = 0.001* (n.links.efficiency.filter(like ='SMR CC').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='SMR CC').filter(like =country)).sum()                                                                       

            var['Installed capacity|Hydrogen|Gasses|Fossil|Natural gas'] = 0.001* (n.links.efficiency.filter(like ='SMR').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='SMR').filter(like =country)).sum()               
                  
            var['Installed capacity|Hydrogen'] = var['Installed capacity|Hydrogen|Electricity']+\
            var['Installed capacity|Hydrogen|Gasses|Fossil|Natural gas']
                  
            # P2G capcaties 
                  
            var['Installed capacity|P2G|Electricity'] = 0.001* (n.links.efficiency.filter(like ='helmeth').filter(like =country)*\
                 n.links.p_nom_opt.filter(like ='helmeth').filter(like =country)).sum()     
                  
          
                  
            ###Energy generation (MWh -> EJ)
            
                  
            ct=3  #Hourly resolution o be multiplied for calculation of energy production
                  
                  
            #Energy : Solar PV (rooftop, ground)   
            
            var1['Generation|Yearly|Electricity|Solar|Rooftop PV'] = 0.001*ct*n.generators_t.p.filter(like ='solar rooftop').filter(like =country).sum().sum()
            var1['Generation|Yearly|Heat|Solar'] = 0.001*ct*n.generators_t.p.filter(like ='solar thermal').filter(like =country).sum().sum()
            var1['Generation|Yearly|Electricity|Solar|Open field'] = 0.00*ct*n.generators_t.p.filter(like ='solar').filter(like =country).sum().sum()\
            -var1['Generation|Yearly|Heat|Solar']-var1['Generation|Yearly|Electricity|Solar|Rooftop PV']
            var1['Generation|Yearly|Electricity|Solar'] =var1['Generation|Yearly|Electricity|Solar|Open field']+var1['Generation|Yearly|Electricity|Solar|Rooftop PV']
            
            #Energy :  onshore and offshore wind   
            
            var1['Generation|Yearly|Electricity|Wind|Onshore']=0.001*ct*n.generators_t.p.filter(like ='onwind').filter(like =country).sum().sum() 
            var1['Generation|Yearly|Electricity|Wind|Offshore']=0.001*ct*n.generators_t.p.filter(like ='offwind').filter(like =country).sum().sum() 
            var1['Generation|Yearly|Electricity|Wind']=var1['Generation|Yearly|Electricity|Wind|Onshore']+var1['Generation|Yearly|Electricity|Wind|Offshore']
            
            #Energy : Nuclear
            
            var1['Generation|Yearly|Electricity|Nuclear'] =0.001*ct*(n.links_t.p1.filter(like ='nuclear').filter(like =country)).sum().sum()
          

            #Energy :  Coal (Lignite)        
                                                           
            var1['Generation|Yearly|Electricity|Coal|Brown Coal|Lignite'] = 0.001*ct*(n.links_t.p1.filter(like ='lignite').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Electricity|Coal|Brown Coal'] =var1['Generation|Yearly|Electricity|Coal|Brown Coal|Lignite'] 
            
            var1['Generation|Yearly|Electricity|Coal'] = 0.001*ct*(n.links_t.p1.filter(like ='coal').filter(like =country)).sum().sum() + var1['Generation|Yearly|Electricity|Coal|Brown Coal']                                                    

            #Energy : Natural gas(OCGT, CCGT, CHP, CHP CC)       
                                                                 
            var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas'] = 0.001*ct*(n.links_t.p1.filter(like ='gas CHP').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas'] += 0.001*ct* (n.links_t.p1.filter(like ='OCGT').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas'] += 0.001*ct*(n.links_t.p1.filter(like ='CCGT').filter(like =country)).sum().sum()
            
            var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas|CCS'] = 0.001*ct*(n.links_t.p1.filter(like ='gas CHP CC').filter(like =country)).sum().sum()
            
            #Energy :Biomass (CCS)
                                                                 
            var1['Generation|Yearly|Electricity|Solid bio and waste|Primary solid biomass'] = 0.001*ct*(n.links_t.p1.filter(like ='solid biomass CHP').filter(like =country)).sum().sum() 
            var1['Generation|Yearly|Electricity|Solid bio and waste'] = var1['Generation|Yearly|Electricity|Solid bio and waste|Primary solid biomass']
            var1['Generation|Yearly|Electricty|Biomass'] = var1['Generation|Yearly|Electricity|Solid bio and waste']
            
            var1['Generation|Yearly|Electricity|Solid bio and waste|Primary solid biomass|CCS'] = 0.001*ct*(n.links_t.p1.filter(like ='solid biomass CHP CC').filter(like =country)).sum().sum()            
            var1['Generation|Yearly|Electricity|Solid bio and waste|CCS'] = var1['Generation|Yearly|Electricity|Solid bio and waste|Primary solid biomass|CCS']
            var1['Generation|Yearly|Electricty|Biomass|CCS'] = var1['Generation|Yearly|Electricity|Solid bio and waste|CCS']            
           
            #Energy : Hydrogen
            
            var1['Generation|Yearly|Electricity|Gases|Hydrogen'] = 0.001*ct*(n.links_t.p1.filter(like ='H2 Fuel Cell').filter(like =country)).sum().sum()

            #Energy : Oil 

            var1['Generation|Yearly|Electricity|Liquids|Fossil'] = 0.001*ct*(n.links_t.p1.filter(like ='oil-').filter(like =country)).sum().sum()

            #Energy : Power to gas (?)
            """"
            var1['Generation|Yearly|P2G|Electricity'] = 0.001*ct*(n.links.efficiency.filter(like ='Sabatier').filter(like =country)*\
                 n.links_t.p1.filter(like ='Sabatier').filter(like =country)).sum()*var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas']/\
                 (var1['Generation|Yearly|Heat|Gases|Fossil|Natural gas']+var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas']                
            """
            
            #Energy : hydro (reservoir, ror)

            var1['Generation|Yearly|Electricity|Hydro|river'] = 0.001*ct*n.generators_t.p.filter(like ='ror').filter(like =country).sum().sum()
            var1['Generation|Yearly|Electricity|Hydro|dam'] = 0.001*ct*n.storage_units_t.p.filter(like ='hydro').filter(like =country).sum().sum()
            var1['Generation|Yearly|Electricity|Hydro'] = var1['Generation|Yearly|Electricity|Hydro|river']+var1['Generation|Yearly|Electricity|Hydro|dam']
           
            #Energy : storage (PHS, battery, H2 storage)  (?)
            
            #MWh to GWh
            var1['Generation|Yearly|Flexibility|Electricity Storage|Medium duration'] = 0.001*ct*(n.storage_units_t.p.filter(like ='PHS').filter(like =country)).sum().sum()+\
             (n.storage_units_t.p.filter(like ='hydro').filter(like =country)).sum().sum()+\
             (n.stores_t.p.filter(like ='water tanks').filter(like =country)).sum().sum()+\
             (n.stores_t.p.filter(like ='H2').filter(like =country)).sum().sum()
            
            var1['Generation|Yearly|Flexibility|Electricity Storage|Short duration'] = 0.001*ct*(n.stores_t.p.filter(like ='battery').filter(like =country)+\
             n.stores_t.p.filter(like ='Li ion').filter(like =country)).sum().sum()
            
            var1['Generation|Yearly|Flexibility|Electricity Storage'] =  var1['Generation|Yearly|Flexibility|Electricity Storage|Medium duration']+\
            var1['Generation|Yearly|Flexibility|Electricity Storage|Short duration']
            
            #Interconnect energy (?)

            var1['Generation|Yearly|Flexibility|Interconnect Importing Capacity'] = 0.001*ct*(abs(n.lines_t.p1[[i for i in n.lines.index if country in n.lines.bus0[i] or country in n.lines.bus1[i]]])).sum().sum()+\
            (abs(n.links_t.p1.filter(like ='H2 pipeline').filter(like =country))).sum().sum()
                      
                
                
            ### Heat capcaties (MW -> GW)
            
            #Energy :Biomass (CCS)

            var1['Generation|Yearly|Heat|Biomass'] = 0.001*ct*(n.links_t.p2.filter(like ='solid biomass CHP').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Electricity|Solid bio and waste'] = var1['Generation|Yearly|Heat|Biomass']  
            var1['Generation|Yearly|Electricity|Solid bio and waste|Primary solid biomass'] = var1['Generation|Yearly|Electricity|Solid bio and waste']  
            
            var1['Generation|Yearly|Heat|Biomass|CCS'] = 0.001*ct*(n.links_t.p2.filter(like ='solid biomass CHP CC').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Heat|Solid bio and waste|CCS'] = var1['Generation|Yearly|Heat|Biomass|CCS']  
            var1['Generation|Yearly|Heat|Solid bio and waste|Primary solid biomass|CCS'] = var1['Generation|Yearly|Heat|Solid bio and waste|CCS']  
          
            #Energy :Electricity (Resistive heater, heat pump)
            
            var1['Generation|Yearly|Heat|Electricity|Direct'] = 0.001*ct*(n.links_t.p1.filter(like ='resistive heater').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Heat|Electricity|Heat pump'] = 0.001*ct*(n.links_t.p1.filter(like ='heat pump').filter(like =country)).sum().sum()
            var1['Generation|Yearly|Heat|Electricity']=var1['Generation|Yearly|Heat|Electricity|Direct']+\
            var1['Generation|Yearly|Heat|Electricity|Heat pump']

            #Energy :Natural gas

            var1['Generation|Yearly|Heat|Gases|Fossil|Natural Gas'] = 0.001*ct*(n.links_t.p2.filter(like ='gas CHP').filter(like =country)).sum().sum()          
            var1['Generation|Yearly|Heat|Gases|Fossil|Natural Gas'] += 0.001*ct* (n.links_t.p2.filter(like ='gas boiler').filter(like =country)).sum().sum()
            
            var1['Generation|Yearly|Heat|Gases|Fossil|Natural Gas|CCS'] = 0.001*ct*(n.links_t.p2.filter(like ='gas CHP CC').filter(like =country)).sum().sum()            
            
            #Energy :Hydrogen
            
            var1['Generation|Yearly|Heat|Gases|Hydrogen'] = 0.001*ct*(n.links_t.p2.filter(like ='H2 Fuel Cell').filter(like =country)).sum().sum()   
            var1['Generation|Yearly|Heat|Gases|Hydrogen'] += 0.001*ct*(n.links_t.p3.filter(like ='Fischer-Tropsch').filter(like =country)).sum().sum()     
            
            #Energy :Power to gas (?)
            """"    
            var1['Generation|Yearly|Heat|Gases|P2G'] = 0.001*ct*(n.links.efficiency.filter(like ='Sabatier').filter(like =country)*\
                 n.links_t.p1.filter(like ='Sabatier').filter(like =country)).sum().sum()*var1['Generation|Yearly|Heat|Gases|Fossil|Natural Gas']/\
                 (var1['Generation|Yearly|Heat|Gases|Fossil|Natural Gas']+var1['Generation|Yearly|Electricity|Gases|Fossil|Natural gas'])                
            """
            #Energy : Oil
 
            var1['Generation|Yearly|Heat|Liquids|Fossil'] = 0.001*ct*(n.links_t.p1.filter(like ='oil boiler').filter(like =country)).sum().sum() 
            
            #Energy : solar thermal
    
            var1['Generation|Yearly|Heat|Solar'] = 0.001*ct*(n.generators_t.p.filter(like ='solar thermal').filter(like =country)).sum().sum() 
            
                                                
            # Hydrogen energy  (MW -> GW)  (?)

            var1['Generation|Yearly|Hydrogen|Electricity'] = 0.001*ct*(n.links_t.p1.filter(like ='H2 Electrolysis').filter(like =country)).sum().sum()                   
            
            var1['Generation|Yearly|Hydrogen|Gasses|Fossil|Natural gas'] = 0.001*ct*(n.links_t.p1.filter(like ='SMR').filter(like =country)).sum().sum()
            
            var1['Generation|Yearly|Hydrogen|Gasses|Fossil|Natural gas|CCS'] = 0.001*ct*(n.links_t.p1.filter(like ='SMR CC').filter(like =country)).sum().sum()            
            
            var1['Generation|Yearly|Hydrogen'] = var1['Generation|Yearly|Hydrogen|Electricity']+\
            var1['Generation|Yearly|Hydrogen|Gasses|Fossil|Natural gas']
            
            # P2G energy (MW -> GW) 
                  
            var1['Generation|Yearly|P2G|Electricity'] = 0.001*ct*(n.links_t.p1.filter(like ='helmeth').filter(like =country)).sum().sum()
                
                  
            for v in var.keys():
                ro=[r for r in ds['D'] if r.value==v][0].row
                ds.cell(row=ro, column=col).value = round(var[v],3) 
                ds.cell(row=ro, column=1).value = model
                ds.cell(row=ro, column=2).value = scenario
                ds.cell(row=ro, column=3).value = country #region
                
            for v in var1.keys():
                ro=[r for r in ds1['D'] if r.value==v][0].row
                ds1.cell(row=ro, column=col1).value = abs(round(var1[v],3)) 
                ds1.cell(row=ro, column=1).value = model
                ds1.cell(row=ro, column=2).value = scenario
                ds1.cell(row=ro, column=3).value = country #region

    file.save("IMAC_{}.xlsx".format(scenario))
